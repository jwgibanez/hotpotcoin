{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","account","setAccount","dispAccount","setDispAccount","a","detectEthereumProvider","provider","console","log","acc","selectedAddress","substring","length","init","className","href","type","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,I,6BC2CAA,MArCf,WACE,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,WAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAoBA,OAnBU,uCAAG,8BAAAC,EAAA,sEACYC,MADZ,QACLC,EADK,SAGTC,QAAQC,IAAI,mCACI,sBACZC,EAAMH,EAASI,mBAEjBT,EAAWQ,GACXN,EAAeM,EAAIE,UAAU,EAAG,GAAK,MAAQF,EAAIE,UAAUF,EAAIG,OAAO,EAAGH,EAAIG,YAI/EL,QAAQC,IAAI,4BACI,4BAbP,2CAAH,oDAiBVK,GAGE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,yBACA,wBAAQC,KAAK,SACXF,UAAWd,EAAU,kBAAoB,kBAD3C,SAC+DE,SAGnE,qBAAKY,UAAS,mBAAgBd,EAAU,sBAAwB,oBAAuBiB,KAAK,QAA5F,SACIjB,EAAU,0BAA4B,kCC1BjCkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c12cd8ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [dispAccount, setDispAccount] = useState('Connect');\n  const init = async () => {\n    const provider = await detectEthereumProvider();\n    if (provider) {\n      console.log('Ethereum successfully detected!');\n      const element = 'Metamask detected.';\n      let acc = provider.selectedAddress;\n      if (acc) {\n        setAccount(acc);\n        setDispAccount(acc.substring(0, 5) + '...' + acc.substring(acc.length-3, acc.length));\n        //ReactDOM.render(element, document.getElementById('message'));\n      }\n    } else {\n      console.log('Please install MetaMask!');\n      const element = 'Please install MetaMask.';\n      //ReactDOM.render(element, document.getElementById('message'));\n    }\n  };\n  init();\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">HOTPOT COIN</a>\n          <button type=\"button\"\n            className={account ? 'btn btn-success' : 'btn btn-warning'}>{dispAccount}</button>\n        </div>\n      </nav>\n      <div className={ `alert' + ${ account ? 'alert alert-success' : 'alert alert-info' }`} role=\"alert\">\n        { account ? 'Connection established.' : 'Waiting for connection...' }\n      </div>\n    </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}